var searchIndex = JSON.parse('{\
"budget_executor":{"doc":"budget-executor","t":[4,3,13,13,3,0,12,0,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,12,12,3,13,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,4,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12],"n":["Budget","BudgetResult","Overage","Remaining","SpendBudget","asynchronous","balance","blocking","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","budget","clone","clone_into","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_future","ne","output","poll","spend","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","BudgetedFuture","Complete","ContinueToCompletion","IncompleteAsyncFuture","NoBudget","Progress","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","continue_to_completion","continue_with_additional_budget","from","from","from","from","into","into","into","into","into_future","into_future","poll","poll","run_with_budget","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","Complete","IncompleteFuture","NoBudget","Progress","borrow","borrow","borrow_mut","borrow_mut","continue_to_completion","continue_with_additional_budget","from","from","into","into","run_with_budget","try_from","try_from","try_into","try_into","type_id","type_id","0","0"],"q":["budget_executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budget_executor::Budget","","budget_executor::asynchronous","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","budget_executor::asynchronous::Progress","","budget_executor::blocking","","","","","","","","","","","","","","","","","","","","","budget_executor::blocking::Progress",""],"d":["The status of the budget.","The result of a completed future.","The amount of overspend.","The remaining budget.","Spends <code>amount</code> from the curent budget.","A budget implementation compatible with any async executor.","The budget after completing the future.","A standalone implementation does not require another async …","","","","","","","Retrieves the current budget.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The output of the future.","","Spends <code>amount</code> from the curent budget.","","","","","","","","","","","","","Executes a future with a given budget when awaited.","The future has completed.","A future that continues executing a budgeted future until …","A future that was budgeted using <code>run_with_budget()</code> that has","The future was interrupted because it requested to spend …","The progress of a future’s execution.","","","","","","","","","When awaited, continues executing the provided future …","Adds <code>additional_budget</code> to the remaining balance and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Executes <code>future</code> with the provided budget. The future will …","","","","","","","","","","","","","","","The future has completed.","A future that was budgeted with <code>run_with_budget()</code> that has …","The future was interrupted because it requested to spend …","The progress of a future’s execution.","","","","","Continues executing the provided future until it …","Adds <code>additional_budget</code> to the remaining balance and …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Executes <code>future</code> with the provided budget. The future will …","","","","","","","",""],"i":[0,0,1,1,0,0,2,0,2,3,1,2,3,1,0,1,1,1,2,3,1,2,3,1,2,3,1,3,1,2,3,0,1,2,3,1,2,3,1,2,3,1,4,5,0,6,0,0,6,0,7,6,8,9,7,6,8,9,8,8,7,6,8,9,7,6,8,9,7,9,7,9,0,7,6,8,9,7,6,8,9,7,6,8,9,10,11,12,0,12,0,13,12,13,12,13,13,13,12,13,12,0,13,12,13,12,13,12,14,15],"f":[null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["option",4,[["budget",4]]]],[[["budget",4]],["budget",4]],[[["",0],["",0]]],[[["budget",4],["budget",4]],["bool",0]],[[["budgetresult",3,[["debug",8]]],["formatter",3]],["result",6]],[[["spendbudget",3],["formatter",3]],["result",6]],[[["budget",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["budget",4],["budget",4]],["bool",0]],null,[[["pin",3,[["spendbudget",3]]],["context",3]],["poll",4]],[[["usize",0]],["spendbudget",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["incompleteasyncfuture",3]],["continuetocompletion",3]],[[["incompleteasyncfuture",3],["usize",0]],["budgetedfuture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pin",3,[["budgetedfuture",3]]],["context",3]],["poll",4]],[[["pin",3,[["continuetocompletion",3]]],["context",3]],["poll",4]],[[["future",8],["usize",0]],["budgetedfuture",3,[["future",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["incompletefuture",3]]],[[["incompletefuture",3],["usize",0]],["progress",4]],[[]],[[]],[[]],[[]],[[["future",8],["usize",0]],["progress",4,[["future",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[4,"Budget"],[3,"BudgetResult"],[3,"SpendBudget"],[13,"Remaining"],[13,"Overage"],[4,"Progress"],[3,"BudgetedFuture"],[3,"IncompleteAsyncFuture"],[3,"ContinueToCompletion"],[13,"NoBudget"],[13,"Complete"],[4,"Progress"],[3,"IncompleteFuture"],[13,"NoBudget"],[13,"Complete"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
