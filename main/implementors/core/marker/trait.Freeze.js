(function() {var implementors = {};
implementors["budget_executor"] = [{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"budget_executor/asynchronous/struct.BudgetedFuture.html\" title=\"struct budget_executor::asynchronous::BudgetedFuture\">BudgetedFuture</a>&lt;B, F&gt;","synthetic":true,"types":["budget_executor::asynchronous::BudgetedFuture"]},{"text":"impl&lt;Budget, F&gt; Freeze for <a class=\"enum\" href=\"budget_executor/asynchronous/enum.Progress.html\" title=\"enum budget_executor::asynchronous::Progress\">Progress</a>&lt;Budget, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Budget: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.63.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["budget_executor::asynchronous::Progress"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"budget_executor/asynchronous/struct.IncompleteAsyncFuture.html\" title=\"struct budget_executor::asynchronous::IncompleteAsyncFuture\">IncompleteAsyncFuture</a>&lt;B, F&gt;","synthetic":true,"types":["budget_executor::asynchronous::IncompleteAsyncFuture"]},{"text":"impl&lt;B, F&gt; Freeze for <a class=\"struct\" href=\"budget_executor/asynchronous/struct.WaitForBudgetFuture.html\" title=\"struct budget_executor::asynchronous::WaitForBudgetFuture\">WaitForBudgetFuture</a>&lt;B, F&gt;","synthetic":true,"types":["budget_executor::asynchronous::WaitForBudgetFuture"]},{"text":"impl&lt;Budget, F&gt; Freeze for <a class=\"struct\" href=\"budget_executor/blocking/struct.IncompleteFuture.html\" title=\"struct budget_executor::blocking::IncompleteFuture\">IncompleteFuture</a>&lt;Budget, F&gt;","synthetic":true,"types":["budget_executor::blocking::IncompleteFuture"]},{"text":"impl&lt;Budget, F&gt; Freeze for <a class=\"enum\" href=\"budget_executor/blocking/enum.Progress.html\" title=\"enum budget_executor::blocking::Progress\">Progress</a>&lt;Budget, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Budget: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.63.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.63.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["budget_executor::blocking::Progress"]},{"text":"impl&lt;T, Budget&gt; Freeze for <a class=\"struct\" href=\"budget_executor/struct.BudgetResult.html\" title=\"struct budget_executor::BudgetResult\">BudgetResult</a>&lt;T, Budget&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Budget: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["budget_executor::BudgetResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budget_executor/struct.SpendBudget.html\" title=\"struct budget_executor::SpendBudget\">SpendBudget</a>","synthetic":true,"types":["budget_executor::SpendBudget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"budget_executor/struct.ReplenishableBudget.html\" title=\"struct budget_executor::ReplenishableBudget\">ReplenishableBudget</a>","synthetic":true,"types":["budget_executor::ReplenishableBudget"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()